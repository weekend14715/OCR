# ====================================================================
# Script: K√Ω file .exe b·∫±ng Self-Signed Certificate
# S·ª≠ d·ª•ng: .\sign_exe.ps1 -ExePath "dist\OCR.exe"
# ====================================================================

param(
    [Parameter(Mandatory=$true)]
    [string]$ExePath,
    
    [Parameter(Mandatory=$false)]
    [string]$PfxFile = ".\OCR_CodeSigning.pfx",
    
    [Parameter(Mandatory=$false)]
    [string]$PfxPassword = "OCR2024!"
)

Write-Host "=================================" -ForegroundColor Cyan
Write-Host "üîê K√ù FILE .EXE" -ForegroundColor Cyan
Write-Host "=================================" -ForegroundColor Cyan
Write-Host ""

# Ki·ªÉm tra file .exe c√≥ t·ªìn t·∫°i kh√¥ng
if (-not (Test-Path $ExePath)) {
    Write-Host "‚ùå L·ªñI: Kh√¥ng t√¨m th·∫•y file: $ExePath" -ForegroundColor Red
    exit 1
}

Write-Host "üìÇ File c·∫ßn k√Ω: $ExePath" -ForegroundColor Green
Write-Host "   Size: $((Get-Item $ExePath).Length / 1MB) MB" -ForegroundColor Gray
Write-Host ""

# Ph∆∞∆°ng ph√°p 1: D√πng certificate t·ª´ .pfx file (∆∞u ti√™n)
if (Test-Path $PfxFile) {
    Write-Host "üîë S·ª≠ d·ª•ng certificate t·ª´ file: $PfxFile" -ForegroundColor Green
    
    try {
        # Load .pfx file
        $certPassword = ConvertTo-SecureString -String $PfxPassword -Force -AsPlainText
        $cert = Get-PfxCertificate -FilePath $PfxFile -Password $certPassword
        
        Write-Host "   Thumbprint: $($cert.Thumbprint)" -ForegroundColor Gray
        Write-Host "   Subject: $($cert.Subject)" -ForegroundColor Gray
        Write-Host ""
        
        # K√Ω file
        Write-Host "‚úçÔ∏è  ƒêang k√Ω file..." -ForegroundColor Yellow
        
        $signature = Set-AuthenticodeSignature -FilePath $ExePath -Certificate $cert -TimestampServer "http://timestamp.digicert.com"
        
        if ($signature.Status -eq "Valid") {
            Write-Host "‚úÖ K√ù TH√ÄNH C√îNG!" -ForegroundColor Green
            Write-Host ""
            Write-Host "üìã Th√¥ng tin ch·ªØ k√Ω:" -ForegroundColor Cyan
            Write-Host "   Status: $($signature.Status)" -ForegroundColor Gray
            Write-Host "   Signer: $($signature.SignerCertificate.Subject)" -ForegroundColor Gray
            Write-Host "   Timestamp: $($signature.TimeStamperCertificate.Subject)" -ForegroundColor Gray
            Write-Host ""
            
            # Verify
            Write-Host "üîç Verify ch·ªØ k√Ω..." -ForegroundColor Yellow
            $verify = Get-AuthenticodeSignature -FilePath $ExePath
            
            if ($verify.Status -eq "Valid") {
                Write-Host "‚úÖ Ch·ªØ k√Ω h·ª£p l·ªá!" -ForegroundColor Green
            } else {
                Write-Host "‚ö†Ô∏è  Status: $($verify.Status)" -ForegroundColor Yellow
                Write-Host "   (Self-signed cert s·∫Ω hi·ªán 'UnknownError' ho·∫∑c 'NotTrusted' - ƒêi·ªÅu n√†y B√ånh TH∆Ø·ªúNG)" -ForegroundColor Gray
            }
            
        } else {
            Write-Host "‚ùå K√ù TH·∫§T B·∫†I!" -ForegroundColor Red
            Write-Host "   Status: $($signature.Status)" -ForegroundColor Red
            Write-Host "   Message: $($signature.StatusMessage)" -ForegroundColor Red
            exit 1
        }
        
    } catch {
        Write-Host "‚ùå L·ªñI: $_" -ForegroundColor Red
        exit 1
    }
    
} else {
    # Ph∆∞∆°ng ph√°p 2: D√πng certificate t·ª´ Windows Certificate Store
    Write-Host "‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y file .pfx: $PfxFile" -ForegroundColor Yellow
    Write-Host "üîç T√¨m certificate trong Windows Certificate Store..." -ForegroundColor Yellow
    
    $cert = Get-ChildItem -Path Cert:\CurrentUser\My -CodeSigningCert | Where-Object { $_.Subject -like "*OCR*" } | Select-Object -First 1
    
    if ($cert) {
        Write-Host "‚úÖ T√¨m th·∫•y certificate:" -ForegroundColor Green
        Write-Host "   Subject: $($cert.Subject)" -ForegroundColor Gray
        Write-Host "   Thumbprint: $($cert.Thumbprint)" -ForegroundColor Gray
        Write-Host ""
        
        Write-Host "‚úçÔ∏è  ƒêang k√Ω file..." -ForegroundColor Yellow
        
        $signature = Set-AuthenticodeSignature -FilePath $ExePath -Certificate $cert -TimestampServer "http://timestamp.digicert.com"
        
        if ($signature.Status -eq "Valid") {
            Write-Host "‚úÖ K√ù TH√ÄNH C√îNG!" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è  Status: $($signature.Status)" -ForegroundColor Yellow
            Write-Host "   (Self-signed cert c√≥ th·ªÉ hi·ªán status kh√°c 'Valid' nh∆∞ng v·∫´n work)" -ForegroundColor Gray
        }
        
    } else {
        Write-Host "‚ùå L·ªñI: Kh√¥ng t√¨m th·∫•y certificate!" -ForegroundColor Red
        Write-Host "   Vui l√≤ng ch·∫°y: .\create_self_signed_cert.ps1" -ForegroundColor Yellow
        exit 1
    }
}

Write-Host ""
Write-Host "=================================" -ForegroundColor Cyan
Write-Host "üìñ TI·∫æP THEO" -ForegroundColor Cyan
Write-Host "=================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "1. Upload file l√™n VirusTotal ƒë·ªÉ scan:" -ForegroundColor Yellow
Write-Host "   https://www.virustotal.com" -ForegroundColor White
Write-Host ""
Write-Host "2. Test file tr√™n m√°y Windows kh√°c" -ForegroundColor Yellow
Write-Host ""
Write-Host "3. Khi ph√°t h√†nh:" -ForegroundColor Yellow
Write-Host "   - N√©n file .exe + cert_info.json v√†o .zip" -ForegroundColor White
Write-Host "   - Th√™m README.txt h∆∞·ªõng d·∫´n c√†i ƒë·∫∑t" -ForegroundColor White
Write-Host ""
Write-Host "‚úÖ HO√ÄN T·∫§T!" -ForegroundColor Green

