# ============================================
# Build v√† K√Ω Installer v·ªõi Inno Setup
# ============================================
# Script t·ª± ƒë·ªông ƒë·ªÉ t·∫°o file c√†i ƒë·∫∑t c√≥ ch·ªØ k√Ω s·ªë

param(
    [string]$CertPassword = "",
    [switch]$SkipBuild = $false,
    [switch]$SkipSigning = $false
)

Write-Host "============================================" -ForegroundColor Cyan
Write-Host "  Vietnamese OCR Tool - Installer Builder  " -ForegroundColor Cyan
Write-Host "============================================" -ForegroundColor Cyan
Write-Host ""

# ============================================
# 1. Ki·ªÉm tra c√°c c√¥ng c·ª• c·∫ßn thi·∫øt
# ============================================
Write-Host "[1/5] Ki·ªÉm tra c√¥ng c·ª•..." -ForegroundColor Yellow

# Ki·ªÉm tra Inno Setup
$InnoSetupPath = "C:\Program Files (x86)\Inno Setup 6\ISCC.exe"
if (-not (Test-Path $InnoSetupPath)) {
    Write-Host "‚ùå Kh√¥ng t√¨m th·∫•y Inno Setup!" -ForegroundColor Red
    Write-Host "   Vui l√≤ng t·∫£i v√† c√†i ƒë·∫∑t t·ª´: https://jrsoftware.org/isdl.php" -ForegroundColor Red
    exit 1
}
Write-Host "‚úì Inno Setup: OK" -ForegroundColor Green

# Ki·ªÉm tra SignTool
$SignToolPath = "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe"
if (-not (Test-Path $SignToolPath)) {
    # T√¨m SignTool trong c√°c phi√™n b·∫£n kh√°c
    $WindowsKitsPath = "C:\Program Files (x86)\Windows Kits\10\bin"
    if (Test-Path $WindowsKitsPath) {
        $SignToolPath = Get-ChildItem -Path $WindowsKitsPath -Recurse -Filter "signtool.exe" -ErrorAction SilentlyContinue | 
                        Select-Object -First 1 -ExpandProperty FullName
    }
}

if (-not $SignToolPath -or -not (Test-Path $SignToolPath)) {
    Write-Host "‚ùå Kh√¥ng t√¨m th·∫•y SignTool!" -ForegroundColor Red
    Write-Host "   SignTool l√† m·ªôt ph·∫ßn c·ªßa Windows SDK" -ForegroundColor Yellow
    Write-Host "   T·∫£i t·ª´: https://developer.microsoft.com/windows/downloads/windows-sdk/" -ForegroundColor Yellow
    if (-not $SkipSigning) {
        exit 1
    }
} else {
    Write-Host "‚úì SignTool: OK" -ForegroundColor Green
}

# Ki·ªÉm tra certificate
$CertPath = "MyCert.pfx"
if (-not (Test-Path $CertPath)) {
    Write-Host "‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y file certificate: $CertPath" -ForegroundColor Yellow
    Write-Host "   B·∫°n c·∫ßn t·∫°o certificate tr∆∞·ªõc khi k√Ω" -ForegroundColor Yellow
    if (-not $SkipSigning) {
        Write-Host ""
        $createCert = Read-Host "B·∫°n c√≥ mu·ªën t·∫°o self-signed certificate ngay b√¢y gi·ªù? (Y/N)"
        if ($createCert -eq "Y" -or $createCert -eq "y") {
            Write-Host ""
            Write-Host "ƒêang t·∫°o self-signed certificate..." -ForegroundColor Cyan
            & ".\create_self_signed_cert.ps1"
            if (-not (Test-Path $CertPath)) {
                Write-Host "‚ùå Kh√¥ng th·ªÉ t·∫°o certificate!" -ForegroundColor Red
                exit 1
            }
        } else {
            exit 1
        }
    }
} else {
    Write-Host "‚úì Certificate: OK" -ForegroundColor Green
}

Write-Host ""

# ============================================
# 2. Build ·ª©ng d·ª•ng b·∫±ng PyInstaller (n·∫øu c·∫ßn)
# ============================================
if (-not $SkipBuild) {
    Write-Host "[2/5] Build ·ª©ng d·ª•ng b·∫±ng PyInstaller..." -ForegroundColor Yellow
    
    if (-not (Test-Path "dist\ocr_tool\ocr_tool.exe")) {
        Write-Host "ƒêang build ·ª©ng d·ª•ng..." -ForegroundColor Cyan
        
        # Ki·ªÉm tra pyinstaller
        $pyinstaller = Get-Command pyinstaller -ErrorAction SilentlyContinue
        if (-not $pyinstaller) {
            Write-Host "‚ùå PyInstaller ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!" -ForegroundColor Red
            Write-Host "   C√†i ƒë·∫∑t b·∫±ng: pip install pyinstaller" -ForegroundColor Yellow
            exit 1
        }
        
        # Build v·ªõi spec file n·∫øu c√≥
        if (Test-Path "ocr_tool.spec") {
            pyinstaller ocr_tool.spec --clean --noconfirm
        } else {
            pyinstaller --name "ocr_tool" `
                        --icon "app_icon.ico" `
                        --windowed `
                        --onedir `
                        --clean `
                        --noconfirm `
                        ocr_tool.py
        }
        
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå Build th·∫•t b·∫°i!" -ForegroundColor Red
            exit 1
        }
    }
    
    Write-Host "‚úì Build th√†nh c√¥ng" -ForegroundColor Green
} else {
    Write-Host "[2/5] B·ªè qua b∆∞·ªõc build (--SkipBuild)" -ForegroundColor Gray
}

Write-Host ""

# ============================================
# 3. K√Ω file EXE ch√≠nh (tr∆∞·ªõc khi ƒë√≥ng g√≥i)
# ============================================
if (-not $SkipSigning) {
    Write-Host "[3/5] K√Ω file EXE ch√≠nh..." -ForegroundColor Yellow
    
    $exePath = "dist\ocr_tool\ocr_tool.exe"
    if (Test-Path $exePath) {
        # Nh·∫≠p m·∫≠t kh·∫©u certificate n·∫øu ch∆∞a c√≥
        if ([string]::IsNullOrEmpty($CertPassword)) {
            $securePassword = Read-Host "Nh·∫≠p m·∫≠t kh·∫©u certificate" -AsSecureString
            $CertPassword = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($securePassword))
        }
        
        Write-Host "ƒêang k√Ω file: $exePath" -ForegroundColor Cyan
        
        & $SignToolPath sign `
            /f $CertPath `
            /p $CertPassword `
            /fd SHA256 `
            /tr http://timestamp.digicert.com `
            /td SHA256 `
            /d "Vietnamese OCR Tool" `
            /du "https://github.com/yourusername/vietnamese-ocr-tool" `
            $exePath
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úì K√Ω EXE th√†nh c√¥ng" -ForegroundColor Green
        } else {
            Write-Host "‚ùå K√Ω EXE th·∫•t b·∫°i!" -ForegroundColor Red
            Write-Host "   Ki·ªÉm tra l·∫°i m·∫≠t kh·∫©u certificate" -ForegroundColor Yellow
            exit 1
        }
    } else {
        Write-Host "‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y file EXE: $exePath" -ForegroundColor Yellow
    }
} else {
    Write-Host "[3/5] B·ªè qua k√Ω EXE (--SkipSigning)" -ForegroundColor Gray
}

Write-Host ""

# ============================================
# 4. Build Installer v·ªõi Inno Setup
# ============================================
Write-Host "[4/5] Build Installer v·ªõi Inno Setup..." -ForegroundColor Yellow

# T·∫°o th∆∞ m·ª•c Output n·∫øu ch∆∞a c√≥
if (-not (Test-Path "Output")) {
    New-Item -ItemType Directory -Path "Output" | Out-Null
}

# Build v·ªõi Inno Setup
Write-Host "ƒêang t·∫°o file c√†i ƒë·∫∑t..." -ForegroundColor Cyan

if (-not $SkipSigning) {
    # Build v·ªõi signing
    & $InnoSetupPath "setup.iss" /Ssigntool="$SignToolPath sign /f `"`$CertPath`" /p `"$CertPassword`" /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 /d `$qVietnamese OCR Tool Setup`$q /du `$qhttps://github.com/yourusername/vietnamese-ocr-tool`$q `$f"
} else {
    # Build kh√¥ng c√≥ signing
    & $InnoSetupPath "setup.iss"
}

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úì Build Installer th√†nh c√¥ng" -ForegroundColor Green
} else {
    Write-Host "‚ùå Build Installer th·∫•t b·∫°i!" -ForegroundColor Red
    exit 1
}

Write-Host ""

# ============================================
# 5. X√°c minh ch·ªØ k√Ω
# ============================================
if (-not $SkipSigning) {
    Write-Host "[5/5] X√°c minh ch·ªØ k√Ω s·ªë..." -ForegroundColor Yellow
    
    # T√¨m file setup v·ª´a t·∫°o
    $setupFile = Get-ChildItem -Path "Output" -Filter "VietnameseOCRTool_Setup*.exe" | 
                 Sort-Object LastWriteTime -Descending | 
                 Select-Object -First 1
    
    if ($setupFile) {
        Write-Host "ƒêang x√°c minh: $($setupFile.Name)" -ForegroundColor Cyan
        
        & $SignToolPath verify /pa /v $setupFile.FullName
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úì Ch·ªØ k√Ω h·ª£p l·ªá!" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è  Kh√¥ng th·ªÉ x√°c minh ch·ªØ k√Ω (c√≥ th·ªÉ do self-signed cert)" -ForegroundColor Yellow
        }
        
        Write-Host ""
        Write-Host "============================================" -ForegroundColor Green
        Write-Host "  ‚úì HO√ÄN TH√ÄNH!" -ForegroundColor Green
        Write-Host "============================================" -ForegroundColor Green
        Write-Host ""
        Write-Host "File c√†i ƒë·∫∑t ƒë√£ s·∫µn s√†ng:" -ForegroundColor Cyan
        Write-Host "  üì¶ $($setupFile.FullName)" -ForegroundColor White
        Write-Host "  üìä K√≠ch th∆∞·ªõc: $([math]::Round($setupFile.Length / 1MB, 2)) MB" -ForegroundColor White
        Write-Host ""
        Write-Host "B·∫°n c√≥ th·ªÉ ph√¢n ph·ªëi file n√†y cho ng∆∞·ªùi d√πng!" -ForegroundColor Green
        Write-Host ""
        
        # M·ªü th∆∞ m·ª•c Output
        $openFolder = Read-Host "M·ªü th∆∞ m·ª•c Output? (Y/N)"
        if ($openFolder -eq "Y" -or $openFolder -eq "y") {
            explorer.exe "Output"
        }
    } else {
        Write-Host "‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y file setup trong th∆∞ m·ª•c Output" -ForegroundColor Yellow
    }
} else {
    Write-Host "[5/5] B·ªè qua x√°c minh ch·ªØ k√Ω (--SkipSigning)" -ForegroundColor Gray
    
    # T√¨m file setup
    $setupFile = Get-ChildItem -Path "Output" -Filter "VietnameseOCRTool_Setup*.exe" | 
                 Sort-Object LastWriteTime -Descending | 
                 Select-Object -First 1
    
    if ($setupFile) {
        Write-Host ""
        Write-Host "============================================" -ForegroundColor Green
        Write-Host "  ‚úì HO√ÄN TH√ÄNH (Kh√¥ng c√≥ ch·ªØ k√Ω)" -ForegroundColor Yellow
        Write-Host "============================================" -ForegroundColor Green
        Write-Host ""
        Write-Host "File c√†i ƒë·∫∑t:" -ForegroundColor Cyan
        Write-Host "  üì¶ $($setupFile.FullName)" -ForegroundColor White
        Write-Host "  üìä K√≠ch th∆∞·ªõc: $([math]::Round($setupFile.Length / 1MB, 2)) MB" -ForegroundColor White
        Write-Host ""
        Write-Host "‚ö†Ô∏è  File n√†y CH∆ØA C√ì ch·ªØ k√Ω s·ªë!" -ForegroundColor Yellow
        Write-Host ""
    }
}

